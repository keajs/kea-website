import React, { Component } from 'react'
import { kea, useActions, useValues } from 'kea'
import PropTypes from 'prop-types'

const delay = ms => new Promise(resolve => window.setTimeout(resolve, ms))

const logic = kea({
  actions: () => ({
    increase: true
  }),
  reducers: ({ actions }) => ({
    counter: [0, PropTypes.number, {
      [actions.increase]: (state, payload) => state + 1
    }]
  }),
  thunks: ({ actions, dispatch, getState }) => ({
    increaseAsync: async (ms) => {
      await delay(ms)
      await actions.increase()
    }
  })
})

function ThunkCounter ({ counter, actions: { increase, increaseAsync } }) {
  const { counter } = useValues(logic)
  const { increase, increaseAsync } = useActions(logic)

  return (
    <div style={{textAlign: 'center'}}>
      <div>{counter}</div>
      {[0, 10, 100, 500, 1000, 2000].map(ms => (
        <button 
          key={ms}
          onClick={() => ms === 0 ? increase() : increaseAsync(ms)}>
          {ms}
        </button>
      ))}
    </div>
  )
}

export default ThunkCounter
