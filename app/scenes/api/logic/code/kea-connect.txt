// Input
connect: {
  actions: [
    otherLogic, [
      'firstAction',
      'secondAction as renamedAction'
    ]
  ],

  values: [
    otherLogic, [
      'firstProp',
      'secondProp as renamedProp',
      '* as allProps'
    ],
    // use Dynamic Logic
    dynamicLogic.withKey(props => props.id), [
      'dynamicProp as thatProp'
    ],
    // select from any redux tree node
    (state) => state.somethingThatResolvesToAnObject, [
      'variable',
      'otherVariable'
    ]
  ]
}

// Output
myRandomSceneLogic.actions == {
  firstAction: otherLogic.actions.firstAction,
  renamedAction: otherLogic.actions.secondAction
}

myRandomSceneLogic.selectors == {
  firstProp: otherLogic.selectors.firstProp,
  renamedProp: otherLogic.selectors.secondProp,
  allProps: otherLogic.selector,
  variable: state.somethingThatResolvesToAnObject.variable,
  otherVariable: state.somethingThatResolvesToAnObject.otherVariable
}
