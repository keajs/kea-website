// create-form.js

import { kea } from 'kea'
import { put, call } from 'redux-saga/effects'

const noop = () => ({})

export default function createForm (options) {
  const defaults = options.defaults || {}
  const validate = options.validate || noop

  const submit = options.submit || noop
  const success = options.success || noop
  const failure = options.failure || noop

  return kea({
    actions: () => ({
      setValue: (key, value) => ({ key, value }),
      setValues: (values) => ({ values }),

      submit: true,
      submitSuccess: (response) => ({ response }),
      submitFailure: (error) => ({ error })
    }),

    reducers: ({ actions }) => ({
      values: [defaults, {
        [actions.setValue]: (state, payload) => {
          return { ...state, [payload.key]: payload.value }
        },
        [actions.setValues]: (state, payload) => {
          return { ...state, ...payload.values }
        },
        [actions.submitSuccess]: () => defaults
      }],

      isSubmitting: [false, {
        [actions.submit]: () => true,
        [actions.submitSuccess]: () => false,
        [actions.submitFailure]: () => false
      }],

      showErrors: [false, {
        [actions.submit]: () => true,
        [actions.submitSuccess]: () => false
      }]
    }),

    selectors: ({ selectors }) => ({
      allErrors: [
        () => [selectors.values],
        validate
      ],

      hasErrors: [
        () => [selectors.allErrors],
        (allErrors) => Object.values(allErrors).filter(k => k).length > 0
      ],

      errors: [
        () => [selectors.allErrors, selectors.showErrors],
        (errors, showErrors) => showErrors ? errors : {}
      ]
    }),

    listeners: ({ actions, values }) => ({
      [actions.submit]: async function () {
        if (values.hasErrors) {
          actions.submitFailure()
          return
        }

        try {
          const response = await submit()
          success(response)
          actions.submitSuccess(response)
        } catch (error) {
          failure(error)
          actions.submitFailure(error)
        }
      }
    })
  })
}
